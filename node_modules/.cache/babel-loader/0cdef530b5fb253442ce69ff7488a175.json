{"ast":null,"code":"let usrToken;\nconst clientID = \"6a75ad4ead464369ac6e2d63b7293964\";\nconst redirectURI = \"http://localhost:3000/\";\nlet Spotify = {\n  getAccessToken() {\n    if (usrToken) {\n      return usrToken;\n    }\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (accessTokenMatch && expiresInMatch) {\n      usrToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => usrToken = \"\", expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n      return usrToken;\n    } else {\n      window.location(`https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`);\n    }\n  },\n\n  search(searchTerm) {\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${searchTerm}`, {\n      headers: {\n        Authorization: `Bearer ${usrToken}`\n      }\n    }).then(response => response.json()).then(jsonReponse => {\n      if (!jsonReponse.tracks) {\n        return [];\n      }\n\n      return jsonReponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  }\n\n};\nmodule.exports = Spotify;","map":{"version":3,"sources":["D:/web development/codecademy/React Music App/reactmusicappapi/src/util/Spotify.js"],"names":["usrToken","clientID","redirectURI","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","search","searchTerm","fetch","headers","Authorization","then","response","json","jsonReponse","tracks","items","map","track","id","name","artist","artists","album","uri","module","exports"],"mappings":"AAAA,IAAIA,QAAJ;AACA,MAAMC,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,wBAApB;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,cAAc,GAAG;AACf,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAP;AACD;;AACD,UAAMK,gBAAgB,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,CAAzB;AACA,UAAMC,cAAc,GAAGJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAvB;;AACA,QAAIJ,gBAAgB,IAAIK,cAAxB,EAAwC;AACtCV,MAAAA,QAAQ,GAAGK,gBAAgB,CAAC,CAAD,CAA3B;AACA,YAAMM,SAAS,GAAGC,MAAM,CAACF,cAAc,CAAC,CAAD,CAAf,CAAxB;AACAJ,MAAAA,MAAM,CAACO,UAAP,CAAkB,MAAOb,QAAQ,GAAG,EAApC,EAAyCW,SAAS,GAAG,IAArD;AACAL,MAAAA,MAAM,CAACQ,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AACA,aAAOf,QAAP;AACD,KAND,MAMO;AACLM,MAAAA,MAAM,CAACC,QAAP,CACG,oDAAmDN,QAAS,kEAAiEC,WAAY,EAD5I;AAGD;AACF,GAlBW;;AAmBZc,EAAAA,MAAM,CAACC,UAAD,EAAa;AACjB,WAAOC,KAAK,CACT,kDAAiDD,UAAW,EADnD,EAEV;AACEE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASpB,QAAS;AAApC;AADX,KAFU,CAAL,CAMJqB,IANI,CAMEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANf,EAOJF,IAPI,CAOEG,WAAD,IAAiB;AACrB,UAAI,CAACA,WAAW,CAACC,MAAjB,EAAyB;AACvB,eAAO,EAAP;AACD;;AACD,aAAOD,WAAW,CAACC,MAAZ,CAAmBC,KAAnB,CAAyBC,GAAzB,CAA8BC,KAAD,KAAY;AAC9CC,QAAAA,EAAE,EAAED,KAAK,CAACC,EADoC;AAE9CC,QAAAA,IAAI,EAAEF,KAAK,CAACE,IAFkC;AAG9CC,QAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiBF,IAHqB;AAI9CG,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYH,IAJ2B;AAK9CI,QAAAA,GAAG,EAAEN,KAAK,CAACM;AALmC,OAAZ,CAA7B,CAAP;AAOD,KAlBI,CAAP;AAmBD;;AAvCW,CAAd;AAyCAC,MAAM,CAACC,OAAP,GAAiBjC,OAAjB","sourcesContent":["let usrToken;\r\nconst clientID = \"6a75ad4ead464369ac6e2d63b7293964\";\r\nconst redirectURI = \"http://localhost:3000/\";\r\nlet Spotify = {\r\n  getAccessToken() {\r\n    if (usrToken) {\r\n      return usrToken;\r\n    }\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      usrToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      window.setTimeout(() => (usrToken = \"\"), expiresIn * 1000);\r\n      window.history.pushState(\"Access Token\", null, \"/\");\r\n      return usrToken;\r\n    } else {\r\n      window.location(\r\n        `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`\r\n      );\r\n    }\r\n  },\r\n  search(searchTerm) {\r\n    return fetch(\r\n      `https://api.spotify.com/v1/search?type=track&q=${searchTerm}`,\r\n      {\r\n        headers: { Authorization: `Bearer ${usrToken}` },\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((jsonReponse) => {\r\n        if (!jsonReponse.tracks) {\r\n          return [];\r\n        }\r\n        return jsonReponse.tracks.items.map((track) => ({\r\n          id: track.id,\r\n          name: track.name,\r\n          artist: track.artists[0].name,\r\n          album: track.album.name,\r\n          uri: track.uri,\r\n        }));\r\n      });\r\n  },\r\n};\r\nmodule.exports = Spotify;\r\n"]},"metadata":{},"sourceType":"module"}