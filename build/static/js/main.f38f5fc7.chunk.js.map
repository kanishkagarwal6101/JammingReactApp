{"version":3,"sources":["util/Spotify.js","Components/searchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/playlist.js","Components/App/App.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","this","onSearch","event","setState","target","value","className","onChange","placeholder","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playListId","uris","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","currentTrack","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f38f5fc7.chunk.js","sourcesContent":["const clientId = \"c565939d445e45b698c7bcc383e9cf5b\";\r\nconst redirectUri = \"http://playlistadd.surge.sh/\";\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    }\r\n\r\n    // check for access token match\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      // This clears the parameters. Allowing us to grab a new access token when it expires.\r\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\r\n      window.history.pushState(\"Access Token\", null, \"/\");\r\n      return accessToken;\r\n    } else {\r\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl;\r\n    }\r\n  },\r\n\r\n  search(term) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        if (!jsonResponse.tracks) {\r\n          return [];\r\n        }\r\n        return jsonResponse.tracks.items.map((track) => ({\r\n          id: track.id,\r\n          name: track.name,\r\n          artist: track.artists[0].name,\r\n          album: track.album.name,\r\n          uri: track.uri,\r\n        }));\r\n      });\r\n  },\r\n\r\n  savePlaylist(name, trackUris) {\r\n    if (!name || !trackUris.length) {\r\n      return;\r\n    }\r\n    const accessToken = Spotify.getAccessToken();\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n    let userId;\r\n\r\n    return fetch(\"https://api.spotify.com/v1/me\", { headers: headers })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        userId = jsonResponse.id;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n          headers: headers,\r\n          method: \"POST\",\r\n          body: JSON.stringify({ name: name }),\r\n        });\r\n      })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        const playListId = jsonResponse.id;\r\n        return fetch(\r\n          `https://api.spotify.com/v1/users/${userId}/playlists/${playListId}/tracks`,\r\n          {\r\n            headers: headers,\r\n            method: \"POST\",\r\n            body: JSON.stringify({ uris: trackUris }),\r\n          }\r\n        );\r\n      });\r\n  },\r\n};\r\n\r\nexport default Spotify;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nexport class SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: \"\",\r\n    };\r\n\r\n    this.search = this.search.bind(this);\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n  }\r\n  search() {\r\n    this.props.onSearch(this.state.term);\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({ term: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <input\r\n          onChange={this.handleTermChange}\r\n          placeholder=\"Enter A Song, Album, or Artist\"\r\n        />\r\n        <button className=\"SearchButton\" onClick={this.search}>\r\n          SEARCH\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Track.css\";\r\n\r\nexport class Track extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n  }\r\n  renderAction() {\r\n    if (this.props.isRemoval) {\r\n      return (\r\n        <button className=\"Track-action\" onClick={this.removeTrack}>\r\n          -\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"Track-action\" onClick={this.addTrack}>\r\n          +\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  addTrack() {\r\n    this.props.onAdd(this.props.track);\r\n  }\r\n\r\n  removeTrack() {\r\n    this.props.onRemove(this.props.track);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <h3>{this.props.track.name}</h3>\r\n          <p>\r\n            {this.props.track.artist} | {this.props.track.album}\r\n          </p>\r\n        </div>\r\n        {this.renderAction()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Track } from \"../Track/Track\";\r\nimport \"./TrackList.css\";\r\nimport { ReactDOM } from \"react\";\r\nexport class TrackList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"TrackList\">\r\n        {this.props.tracks.map((track) => {\r\n          return (\r\n            <Track\r\n              track={track}\r\n              key={track.id}\r\n              onAdd={this.props.onAdd}\r\n              onRemove={this.props.onRemove}\r\n              isRemoval={this.props.isRemoval}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./SearchResults.css\";\r\nimport { TrackList } from \"../TrackList/TrackList\";\r\n\r\nexport class SearchResults extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"SearchResults\">\r\n        <h2>Results</h2>\r\n        <TrackList\r\n          tracks={this.props.searchResults}\r\n          onAdd={this.props.onAdd}\r\n          isRemoval={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./playlist.css\";\r\nimport { TrackList } from \"../TrackList/TrackList\";\r\n\r\nexport class Playlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n  handleNameChange(event) {\r\n    this.props.onNameChange(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Playlist\">\r\n        <input defaultValue={\"New Playlist\"} onChange={this.handleNameChange} />\r\n        <TrackList\r\n          tracks={this.props.playlistTracks}\r\n          onAdd={this.props.onAdd}\r\n          onRemove={this.props.onRemove}\r\n          isRemoval={true}\r\n        />\r\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>\r\n          SAVE TO SPOTIFY\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { SearchBar } from \"../searchBar/SearchBar\";\nimport { SearchResults } from \"../SearchResults/SearchResults\";\nimport { Playlist } from \"../Playlist/playlist\";\nimport \"./App.css\";\nimport { ReactDOM } from \"react\";\n\nimport Spotify from \"../../util/Spotify\";\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"My playlist\",\n      playlistTracks: [],\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\n\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: [],\n      });\n    });\n  }\n\n  search(term) {\n    Spotify.search(term).then((searchResults) => {\n      this.setState({ searchResults: searchResults });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./Components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}